// <auto-generated />
using System;
using CinehubBack.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CinehubBack.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CinehubBack.Model.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<bool>("Adult")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("adult")
                        .HasAnnotation("Relational:JsonPropertyName", "adult");

                    b.Property<string>("BackPhotoUrl")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("backdrop_path")
                        .HasAnnotation("Relational:JsonPropertyName", "backdrop_path");

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("budget")
                        .HasAnnotation("Relational:JsonPropertyName", "budget");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<string>("Genres")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("genres")
                        .HasAnnotation("Relational:JsonPropertyName", "genres");

                    b.Property<string>("KeyWords")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("keywords")
                        .HasAnnotation("Relational:JsonPropertyName", "keywords");

                    b.Property<string>("OriginalLanguage")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("original_language")
                        .HasAnnotation("Relational:JsonPropertyName", "original_language");

                    b.Property<string>("Overview")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("overview")
                        .HasAnnotation("Relational:JsonPropertyName", "overview");

                    b.Property<decimal>("Popularity")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("popularity")
                        .HasAnnotation("Relational:JsonPropertyName", "popularity");

                    b.Property<string>("PosterPhotoUrl")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("poster_path")
                        .HasAnnotation("Relational:JsonPropertyName", "poster_path");

                    b.Property<string>("Productions")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("productions")
                        .HasAnnotation("Relational:JsonPropertyName", "production_companies");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("release_date")
                        .HasAnnotation("Relational:JsonPropertyName", "release_date");

                    b.Property<decimal>("Revenue")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("revenue")
                        .HasAnnotation("Relational:JsonPropertyName", "revenue");

                    b.Property<int>("RunTime")
                        .HasColumnType("int")
                        .HasColumnName("runtime")
                        .HasAnnotation("Relational:JsonPropertyName", "runtime");

                    b.Property<string>("Tagline")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tagline")
                        .HasAnnotation("Relational:JsonPropertyName", "tagline");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("title")
                        .HasAnnotation("Relational:JsonPropertyName", "title");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.Property<decimal>("VoteAverage")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("vote_average")
                        .HasAnnotation("Relational:JsonPropertyName", "vote_average");

                    b.Property<int>("VoteCount")
                        .HasColumnType("int")
                        .HasColumnName("vote_count")
                        .HasAnnotation("Relational:JsonPropertyName", "vote_count");

                    b.HasKey("Id");

                    b.ToTable("movie", (string)null);
                });

            modelBuilder.Entity("CinehubBack.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("role");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.ToTable("user", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
